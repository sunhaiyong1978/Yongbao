From 61831da7ab7092ac6b9e1d484074346f7537d518 Mon Sep 17 00:00:00 2001
From: Sun haiyong <sunhaiyong@zdbr.net>
Date: Mon, 23 Oct 2023 22:26:14 +0800
Subject: [PATCH 2/2] libvirt 9.8.0 add loongarch64 support files.

---
 src/cpu/cpu_loongarch64.c | 86 +++++++++++++++++++++++++++++++++++++++
 src/cpu/cpu_loongarch64.h |  5 +++
 2 files changed, 91 insertions(+)
 create mode 100644 src/cpu/cpu_loongarch64.c
 create mode 100644 src/cpu/cpu_loongarch64.h

diff --git a/src/cpu/cpu_loongarch64.c b/src/cpu/cpu_loongarch64.c
new file mode 100644
index 0000000..254a7d0
--- /dev/null
+++ b/src/cpu/cpu_loongarch64.c
@@ -0,0 +1,86 @@
+/*
+ * cpu_loongarch64.c: CPU driver for loongarch64 CPUs
+ *
+ * Copyright (C) 2023, Ventana Micro
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library.  If not, see
+ * <http://www.gnu.org/licenses/>.
+ */
+
+#include <config.h>
+
+#include "cpu.h"
+
+
+#define VIR_FROM_THIS VIR_FROM_CPU
+
+static const virArch archs[] = { VIR_ARCH_LOONGARCH64 };
+
+static virCPUCompareResult
+virCPULoongArch64Compare(virCPUDef *host G_GNUC_UNUSED,
+                     virCPUDef *cpu G_GNUC_UNUSED,
+                     bool failMessages G_GNUC_UNUSED)
+{
+    /*
+     * For now QEMU will perform all runtime checks.
+     */
+    return VIR_CPU_COMPARE_IDENTICAL;
+}
+
+
+static int
+virCPULoongArch64ValidateFeatures(virCPUDef *cpu G_GNUC_UNUSED)
+{
+    return 0;
+}
+
+
+static int
+virCPULoongArch64Update(virCPUDef *guest,
+                    const virCPUDef *host,
+                    bool relative)
+{
+    g_autoptr(virCPUDef) updated = virCPUDefCopyWithoutModel(guest);
+
+    if (!relative || guest->mode != VIR_CPU_MODE_HOST_MODEL)
+        return 0;
+
+    if (!host) {
+        virReportError(VIR_ERR_CONFIG_UNSUPPORTED, "%s",
+                       _("unknown host CPU model"));
+        return -1;
+    }
+
+    updated->mode = VIR_CPU_MODE_CUSTOM;
+    virCPUDefCopyModel(updated, host, true);
+
+    virCPUDefStealModel(guest, updated, false);
+    guest->mode = VIR_CPU_MODE_CUSTOM;
+    guest->match = VIR_CPU_MATCH_EXACT;
+
+    return 0;
+}
+
+struct cpuArchDriver cpuDriverLoongArch64 = {
+    .name = "loongarch64",
+    .arch = archs,
+    .narch = G_N_ELEMENTS(archs),
+    .getHost = NULL,
+    .compare    = virCPULoongArch64Compare,
+    .decode     = NULL,
+    .encode     = NULL,
+    .baseline   = NULL,
+    .update     = virCPULoongArch64Update,
+    .validateFeatures = virCPULoongArch64ValidateFeatures,
+};
diff --git a/src/cpu/cpu_loongarch64.h b/src/cpu/cpu_loongarch64.h
new file mode 100644
index 0000000..b0a1685
--- /dev/null
+++ b/src/cpu/cpu_loongarch64.h
@@ -0,0 +1,5 @@
+#pragma once
+
+#include "cpu.h"
+
+extern struct cpuArchDriver cpuDriverLoongArch64;
-- 
2.42.0

