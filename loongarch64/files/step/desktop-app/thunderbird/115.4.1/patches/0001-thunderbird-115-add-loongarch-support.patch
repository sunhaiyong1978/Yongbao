From 242b2cd4990af76eaa358620cc2a70f66644ac12 Mon Sep 17 00:00:00 2001
From: Sun Haiyong <sunhaiyong@zdbr.net>
Date: Thu, 13 Jul 2023 11:14:39 +0000
Subject: [PATCH] thunderbird 115 add loongarch support.

---
 ipc/chromium/src/build/build_config.h      | 3 +++
 third_party/libwebrtc/build/build_config.h | 4 ++++
 toolkit/moz.configure                      | 6 +++---
 3 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/ipc/chromium/src/build/build_config.h b/ipc/chromium/src/build/build_config.h
index c39ae9d..66c0d4a 100644
--- a/ipc/chromium/src/build/build_config.h
+++ b/ipc/chromium/src/build/build_config.h
@@ -125,6 +125,9 @@
 #elif defined(__riscv) && __riscv_xlen == 64
 #  define ARCH_CPU_RISCV64 1
 #  define ARCH_CPU_64_BITS 1
+#elif defined(__loongarch_lp64)
+#  define ARCH_CPU_LOONGARCH64 1
+#  define ARCH_CPU_64_BITS 1
 #else
 #  error Please add support for your architecture in build/build_config.h
 #endif
diff --git a/third_party/libwebrtc/build/build_config.h b/third_party/libwebrtc/build/build_config.h
index c39ae9d..66c0d4a 100644
--- a/third_party/libwebrtc/build/build_config.h
+++ b/third_party/libwebrtc/build/build_config.h
@@ -210,6 +210,10 @@
 #define ARCH_CPU_SPARC 1
 #define ARCH_CPU_32_BITS 1
 #define ARCH_CPU_BIG_ENDIAN 1
+#elif defined(__loongarch_lp64)
+#define ARCH_CPU_LOONGARCH64 1
+#define ARCH_CPU_64_BITS 1
+#define ARCH_CPU_LITTLE_ENDIAN 1
 #else
 #error Please add support for your architecture in build/build_config.h
 #endif
diff --git a/toolkit/moz.configure b/toolkit/moz.configure
index c518e02..b04997d 100644
--- a/toolkit/moz.configure
+++ b/toolkit/moz.configure
@@ -513,7 +513,7 @@ set_define("MOZ_WAYLAND", depends_if(wayland_headers)(lambda _: True))
 def vaapi(target, wayland_headers):
     # VAAPI is only used in Wayland. It's mostly used on x86(-64) but is
     # sometimes used on ARM/ARM64 SOCs. Wayland implies GTK and Linux.
-    if target.cpu in ("arm", "aarch64", "x86", "x86_64") and wayland_headers:
+    if target.cpu in ("arm", "aarch64", "x86", "x86_64", "loongarch64") and wayland_headers:
         return True
 
 
@@ -521,7 +521,7 @@ def vaapi(target, wayland_headers):
 def v4l2(target, wayland_headers):
     # V4L2 decode is only used in Wayland, and generally only appears on
     # embedded SOCs. Wayland implies GTK and Linux.
-    if target.cpu in ("arm", "aarch64", "riscv64") and wayland_headers:
+    if target.cpu in ("arm", "aarch64", "riscv64", "loongarch64") and wayland_headers:
         return True
 
 
@@ -2240,7 +2240,7 @@ with only_when(compile_environment | artifact_builds):
                 use_nasm = False
         elif target.cpu == "x86_64":
             flags = ["-D__x86_64__", "-DPIC", "-DELF", "-Pconfig_unix64.asm"]
-        elif target.cpu in ("x86", "arm", "aarch64"):
+        elif target.cpu in ("x86", "arm", "aarch64", "loongarch64"):
             flac_only = True
         else:
             enable = False
-- 
2.31.1

