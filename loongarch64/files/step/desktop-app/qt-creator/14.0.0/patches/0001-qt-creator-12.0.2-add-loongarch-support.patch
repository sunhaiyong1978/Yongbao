From 6b6eeb309b8aceb09efc20192d434da869c087b3 Mon Sep 17 00:00:00 2001
From: Sun Haiyong <sunhaiyong@zdbr.net>
Date: Tue, 19 Mar 2024 01:36:56 +0000
Subject: [PATCH] qt creator 12.0.2 add loongarch support.

---
 src/plugins/projectexplorer/abi.cpp | 17 +++++++++++++++++
 src/plugins/projectexplorer/abi.h   |  1 +
 2 files changed, 18 insertions(+)

diff --git a/src/plugins/projectexplorer/abi.cpp b/src/plugins/projectexplorer/abi.cpp
index d1bd01b..ccf1e23 100644
--- a/src/plugins/projectexplorer/abi.cpp
+++ b/src/plugins/projectexplorer/abi.cpp
@@ -145,6 +145,8 @@ static Abi::Architecture architectureFromQt()
         return Abi::AvrArchitecture;
     if (arch.startsWith("asmjs"))
         return Abi::AsmJsArchitecture;
+    if (arch.startsWith("loongarch"))
+        return Abi::LoongArchArchitecture;
 
     return Abi::UnknownArchitecture;
 }
@@ -570,6 +572,9 @@ Abi Abi::abiFromTargetTriplet(const QString &triple)
             flavor = GenericFlavor;
             format = ElfFormat;
             width = p.contains("64") ? 64 : 32;
+        } else if (p.startsWith("loongarch")) {
+            arch = LoongArchArchitecture;
+            width = p.contains("64") ? 64 : 32;
         } else if (p.startsWith("mips")) {
             arch = MipsArchitecture;
             width = p.contains("64") ? 64 : 32;
@@ -810,6 +815,8 @@ QString Abi::toString(const Architecture &a)
         return QLatin1String("cr16");
     case RiscVArchitecture:
         return QLatin1String("riscv");
+    case LoongArchArchitecture:
+        return QLatin1String("loongarch");
     case UnknownArchitecture:
         Q_FALLTHROUGH();
     default:
@@ -984,6 +991,8 @@ Abi::Architecture Abi::architectureFromString(const QString &a)
         return CR16Architecture;
     if (a == "riscv")
         return RiscVArchitecture;
+    if (a == "loongarch")
+        return LoongArchArchitecture;
     else if (a == "xtensa")
         return XtensaArchitecture;
     if (a == "asmjs")
@@ -1546,6 +1555,14 @@ void ProjectExplorer::ProjectExplorerPlugin::testAbiFromTargetTriplet_data()
     QTest::newRow("asmjs-unknown-emscripten") << int(Abi::AsmJsArchitecture)
                                               << int(Abi::UnknownOS) << int(Abi::UnknownFlavor)
                                               << int(Abi::EmscriptenFormat) << 32;
+
+    QTest::newRow("loongarch64-linux-gnu") << int(Abi::LoongArchArchitecture)
+                                    << int(Abi::LinuxOS) << int(Abi::GenericFlavor)
+                                    << int(Abi::ElfFormat) << 64;
+
+    QTest::newRow("loongarch64-unknown-linux-gnu") << int(Abi::LoongArchArchitecture)
+                                    << int(Abi::LinuxOS) << int(Abi::GenericFlavor)
+                                    << int(Abi::ElfFormat) << 64;
 }
 
 void ProjectExplorer::ProjectExplorerPlugin::testAbiFromTargetTriplet()
diff --git a/src/plugins/projectexplorer/abi.h b/src/plugins/projectexplorer/abi.h
index 7bf8080..71f62ad 100644
--- a/src/plugins/projectexplorer/abi.h
+++ b/src/plugins/projectexplorer/abi.h
@@ -54,6 +54,7 @@ public:
         R32CArchitecture,
         CR16Architecture,
         RiscVArchitecture,
+        LoongArchArchitecture,
         UnknownArchitecture
     };
 
-- 
2.31.1

