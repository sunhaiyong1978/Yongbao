source env/DE-KDE/config
source env/distro.info
source env/function.sh
export STEP_BUILDNAME=DE-KDE
export STEP_PACKAGENAME=overlay_temp_fix_run
export PACKAGE_VERSION=
export RESOURCEDIR=${NEW_TARGET_SYSDIR}/files/DE-KDE/overlay_temp_fix_run//
sed -i.orig "s@\${_qt5Core_install_prefix}@${CROSSTOOLS_DIR}@g" \
            ${SYSROOT_DIR}/usr/lib64/cmake/Qt5Core/Qt5CoreConfigExtras.cmake
sed -i.orig "s@\${_qt5_linguisttools_install_prefix}@${CROSSTOOLS_DIR}@g" \
            ${SYSROOT_DIR}/usr/lib64/cmake/Qt5LinguistTools/Qt5LinguistToolsConfig.cmake
sed -i.orig "s@\${_qt5DBus_install_prefix}@${CROSSTOOLS_DIR}@g" \
            ${SYSROOT_DIR}/usr/lib64/cmake/Qt5DBus/Qt5DBusConfigExtras.cmake
sed -i.orig "s@\${_qt5Widgets_install_prefix}@${CROSSTOOLS_DIR}@g" \
            ${SYSROOT_DIR}/usr/lib64/cmake/Qt5Widgets/Qt5WidgetsConfigExtras.cmake


sed -i.orig "s@pkgdatadir=\${datarootdir}/wayland@pkgdatadir=${SYSROOT_DIR}/usr/share/wayland@g"  ${SYSROOT_DIR}/usr/lib64/pkgconfig/wayland-scanner.pc

for phonon_file in PhononTargets-release.cmake PhononExperimentalTargets-release.cmake Phonon4Qt5Config.cmake PhononTargets.cmake Phonon4Qt5ExperimentalConfig.cmake PhononExperimentalTargets.cmake
do
	if [ -f ${SYSROOT_DIR}/usr/lib64/cmake/phonon4qt5/${phonon_file} ]; then
		sed -i.orig "s@\"/usr@\"${SYSROOT_DIR}/usr@g" \
			${SYSROOT_DIR}/usr/lib64/cmake/phonon4qt5/${phonon_file}
	fi
done

for kf5_file in KF5Config/KF5ConfigCompilerTargets-release.cmake KF5Auth/KF5AuthToolsTargets-release.cmake KF5KCMUtils/KF5KCMUtilsToolingTargets-release.cmake
do
	if [ -f ${SYSROOT_DIR}/usr/lib64/cmake/${kf5_file} ]; then
		sed -i.orig "s@\"/usr/lib64/libexec@\"${CROSSTOOLS_DIR}/lib64/libexec@g" \
			${SYSROOT_DIR}/usr/lib64/cmake/${kf5_file}
	fi
done

for kf5_file in KF5CoreAddons/KF5CoreAddonsToolingTargets-release.cmake KF5DocTools/KF5DocToolsToolsTargets-release.cmake KF5DesignerPlugin/KF5DesignerPluginTargets-release.cmake
do
	if [ -f ${SYSROOT_DIR}/usr/lib64/cmake/${kf5_file} ]; then
		sed -i.orig "s@\${_IMPORT_PREFIX}@${CROSSTOOLS_DIR}@g" \
			${SYSROOT_DIR}/usr/lib64/cmake/${kf5_file}
	fi
done


# for kf5_file in KF5Archive/KF5ArchiveTargets-release.cmake \
#		libavif/libavif-config-release.cmake \
#		KF5Archive/KF5ArchiveTargets.cmake \
#		KF5CoreAddons/KF5CoreAddonsTargets-release.cmake \
#		PolkitQt5-1/PolkitQt5-1Targets-release.cmake \
#		KF5CoreAddons/KF5CoreAddonsTargets.cmake \
#		KF5Config/KF5ConfigTargets-release.cmake \
#		KF5Config/KF5ConfigTargets.cmake \
#		KF5WidgetsAddons/KF5WidgetsAddonsTargets-release.cmake \
#		KF5WidgetsAddons/KF5WidgetsAddonsTargets.cmake \
#		KF5I18n/KF5I18nTargets-release.cmake \
#		KF5I18n/KF5I18nTargets.cmake \
#		KF5Codecs/KF5CodecsTargets-release.cmake \
#		KF5DocTools/KF5DocToolsTargets-release.cmake \
#		KF5GuiAddons/KF5GuiAddonsTargets-release.cmake \
#		KF5Auth/KF5AuthTargets-release.cmake \
#		KF5GuiAddons/KF5GuiAddonsTargets.cmake \
#		KF5Codecs/KF5CodecsTargets.cmake \
#		KF5Auth/KF5AuthTargets.cmake \
#		KF5DBusAddons/KF5DBusAddonsTargets-release.cmake \
#		KF5DBusAddons/KF5DBusAddonsTargets.cmake \
#		KF5Crash/KF5CrashTargets-release.cmake

for kf5_file in $(grep -rl "\.so\." $(find ${SYSROOT_DIR}/usr/lib64/cmake/ -name "*-release.cmake")) \
		${SYSROOT_DIR}/usr/lib64/cmake/Qca-qt5/Qca-qt5Targets.cmake \
		${SYSROOT_DIR}/usr/lib64/cmake/PolkitQt5-1/PolkitQt5-1Targets.cmake
do
	if [ -f ${kf5_file} ]; then
		sed -i.orig "s@\"/usr@\"${SYSROOT_DIR}/usr@g" ${kf5_file}
	fi
done

for kf5_file in $(grep -rl "_IMPORT_PREFIX \"/usr\"" $(find ${SYSROOT_DIR}/usr/lib64/cmake/ -name "*.cmake"))
do
	if [ -f ${kf5_file} ]; then
		sed -i.orig "s@_IMPORT_PREFIX \"/usr\"@_IMPORT_PREFIX \"${SYSROOT_DIR}/usr\"@g" ${kf5_file}
	fi
done

for kf5_file in ${SYSROOT_DIR}/usr/lib64/cmake/KF5ModemManagerQt/KF5ModemManagerQtTargets.cmake \
		${SYSROOT_DIR}/usr/lib64/cmake/KSysGuard/KSysGuardLibraryTargets.cmake
do
	if [ -f ${kf5_file} ]; then
		sed -i.orig "s@;/usr@;${SYSROOT_DIR}/usr@g" ${kf5_file}
	fi
done
