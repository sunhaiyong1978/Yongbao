source env/computer_language/config
source env/distro.info
source env/function.sh
export STEP_BUILDNAME=computer_language
export STEP_PACKAGENAME=rustc
export PACKAGE_VERSION=1.88.0
export RESOURCEDIR=${NEW_TARGET_SYSDIR}/files/computer_language/rustc/1.88.0/
rm -rf ${BUILD_DIRECTORY}/rustc-1.88.0-src
tar xvf ${DOWNLOADDIR}/rustc-1.88.0-src.tar.gz -C ${BUILD_DIRECTORY} 
pushd ${BUILD_DIRECTORY}/rustc-1.88.0-src
    
    PKG_CONFIG_SYSROOT_DIR="" \
    ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var \
                --host=${CROSS_TARGET} \
                --local-rust-root=${CROSSTOOLS_DIR} \
                --enable-extended --enable-vendor --release-channel=stable \
                --disable-codegen-tests --experimental-targets="" \
		--enable-llvm-static-stdcpp --enable-cargo-native-static
    PKG_CONFIG_SYSROOT_DIR="" \
    make -j${JOBS} HOST_CC="gcc" CC="${CROSS_TARGET}-gcc" \
         HOST_CXX="g++" CXX="${CROSS_TARGET}-g++" \
         LOONGARCH64_UNKNOWN_LINUX_GNU_OPENSSL_INCLUDE_DIR=${SYSROOT_DIR}/usr/include \
         LOONGARCH64_UNKNOWN_LINUX_GNU_OPENSSL_LIB_DIR=${SYSROOT_DIR}/usr/lib64
    PKG_CONFIG_SYSROOT_DIR="" \
    make -j${JOBS} HOST_CC="gcc" CC="${CROSS_TARGET}-gcc" \
         HOST_CXX="g++" CXX="${CROSS_TARGET}-g++" \
         LOONGARCH64_UNKNOWN_LINUX_GNU_OPENSSL_INCLUDE_DIR=${SYSROOT_DIR}/usr/include \
         LOONGARCH64_UNKNOWN_LINUX_GNU_OPENSSL_LIB_DIR=${SYSROOT_DIR}/usr/lib64 \
         dist
    mkdir -pv ${DIST_DIRECTORY}/host/${ARCH_NAME}/rust/$(echo "1.88.0" | sed "s@-default@@g")/
    find build/dist -name "*.xz" -exec mv -v '{}' ${DIST_DIRECTORY}/host/${ARCH_NAME}/rust/$(echo "1.88.0" | sed "s@-default@@g")/ ';'
popd 
rm -rf ${BUILD_DIRECTORY}/rustc-1.88.0-src
