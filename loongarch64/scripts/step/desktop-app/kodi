source env/desktop-app/config
source env/distro.info
source env/function.sh
export STEP_BUILDNAME=desktop-app
export STEP_PACKAGENAME=kodi
export PACKAGE_VERSION=21.0b2-Omega
export RESOURCEDIR=${NEW_TARGET_SYSDIR}/files/desktop-app/kodi/21.0b2-Omega/
rm -rf ${BUILD_DIRECTORY}/xbmc-21.0b2-Omega
tar xvf ${DOWNLOADDIR}/xbmc-21.0b2-Omega.tar.gz -C ${BUILD_DIRECTORY} 
pushd ${BUILD_DIRECTORY}/xbmc-21.0b2-Omega
        patch -Np1 -i ${SYSDIR}/files/desktop-app/kodi/21.0b2-Omega/patches/0001-kodi-fix-build-error-for-gcc-14.patch 
	patch -Np1 -i ${SYSDIR}/files/desktop-app/kodi/21.0b2-Omega/patches/0001-fix-xbmc-Settings-undefine-error.patch 
	patch -Np1 -i ${SYSDIR}/files/desktop-app/kodi/21.0b2-Omega/patches/0002-kodi-internal-spdlog-update-to-1.12.0.patch 
	patch -Np1 -i ${SYSDIR}/files/desktop-app/kodi/21.0b2-Omega/patches/0001-change-font-setting-from-Default-to-Arial.patch 
	 
	export PATH=${CROSSTOOLS_DIR}/jdk17-bootstrap/bin:${PATH}
	sed -i "/DSPDLOG_FMT_EXTERNAL/s@=ON@=OFF@g" cmake/modules/FindSpdlog.cmake
	sed -i "/configure/s@configure@& --host=${CROSS_TARGET}@g" cmake/modules/FindUdfread.cmake
	sed -i "s@resource.language.en_gb@resource.language.zh_cn@g" system/settings/settings.xml
        mkdir cross-build
        pushd cross-build
                CC="${CROSS_TARGET}-gcc" CXX="${CROSS_TARGET}-g++" \
		CXXFLAGS="${CXXFLAGS} -DTIXML_USE_STL" CFLAGS="${CFLAGS} -DTIXML_USE_STL" \
		LDFLAGS="${LDFLAGS} -Wl,-rpath-link=${SYSROOT_DIR}/usr/lib64/samba" \
                cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${COMMON_DIR}/cmake-cross.cmake \
                      -DPKG_CONFIG_EXECUTABLE=${CROSSTOOLS_DIR}/bin/${CROSS_TARGET}-pkg-config \
                      -DGETTEXT_MSGFMT_EXECUTABLE=/bin/msgfmt \
                      -DGETTEXT_MSGMERGE_EXECUTABLE=/bin/msgmerge \
                      -DPython_EXECUTABLE=${CROSSTOOLS_DIR}/bin/${CROSS_TARGET}-python3 \
                      -DPython3_EXECUTABLE=${CROSSTOOLS_DIR}/bin/${CROSS_TARGET}-python3 \
                      -DPYTHON_EXECUTABLE=${CROSSTOOLS_DIR}/bin/${CROSS_TARGET}-python3 \
                      -DPYTHON3_EXECUTABLE=${CROSSTOOLS_DIR}/bin/${CROSS_TARGET}-python3 \
                      -DPERL_EXECUTABLE=${CROSSTOOLS_DIR}/bin/${CROSS_TARGET}-perl \
                      -DRuby_EXECUTABLE=${CROSSTOOLS_DIR}/bin/ruby \
                      -DGPERF_EXECUTABLE=/bin/gperf -DGperf_EXECUTABLE=/bin/gperf \
                      -DDOXYGEN_EXECUTABLE=/bin/doxygen \
                      -DWaylandScanner_EXECUTABLE=${CROSSTOOLS_DIR}/bin/wayland-scanner \
                      -DQtWaylandScanner_EXECUTABLE=${CROSSTOOLS_DIR}/bin/qtwaylandscanner \
                      -DLIBXML2_XMLLINT_EXECUTABLE=${CROSSTOOLS_DIR}/bin/xmllint \
                      -DFLEX_EXECUTABLE=/bin/flex \
                      -DBISON_EXECUTABLE=/bin/bison \
                      -Dgzip_EXECUTABLE=/bin/gzip \
                      -DCMAKE_INSTALL_LIBDIR=/usr/lib64 -DLIB_SUFFIX=64 -DCMAKE_INSTALL_LIBEXECDIR=/usr/libexec \
                      -DCMAKE_INSTALL_PREFIX=/usr \
                      -DBUILD_SHARED_LIBS=ON \
		      -DAPP_RENDER_SYSTEM=gl -DHOST_CAN_EXECUTE_TARGET=ON \
		      -DENABLE_INTERNAL_FMT=ON \
                      -Wno-dev ..

		cp ${RESOURCEDIR}/files/libdvdcss-1.4.3-Next-Nexus-Alpha2-2.tar.gz build/download/
		cp ${RESOURCEDIR}/files/libdvdread-6.1.3-Next-Nexus-Alpha2-2.tar.gz build/download/
		cp ${RESOURCEDIR}/files/libdvdnav-6.1.1-Next-Nexus-Alpha2-2.tar.gz build/download/
		cp ${RESOURCEDIR}/files/spdlog-1.12.0.tar.gz  build/download/

		tar xvf ${RESOURCEDIR}/files/tarballs.listfile_dir.tar.gz
		mv tarballs.listfile_dir/* build/download/
		rmdir tarballs.listfile_dir


		make TexturePacker/fast
		mv build/texturepacker/TexturePacker{,.orig}
		echo "#!/bin/bash
 qemu-loongarch64 ${PWD}/build/texturepacker/TexturePacker.orig \"\$@\"" > build/texturepacker/TexturePacker
		chmod +x build/texturepacker/TexturePacker

		make JsonSchemaBuilder

		make -j${JOBS} CC="${CROSS_TARGET}-gcc" CXX="${CROSS_TARGET}-g++"

		rm build/texturepacker/TexturePacker
		mv build/texturepacker/TexturePacker{.orig,}
		make DESTDIR=${SYSROOT_DIR} install
        popd
        rm -f ${SYSROOT_DIR}/usr/lib64/*.la
popd 
rm -rf ${BUILD_DIRECTORY}/xbmc-21.0b2-Omega

rm ${SYSROOT_DIR}/usr/share/wayland-sessions/kodi-gbm.desktop
rm ${SYSROOT_DIR}/usr/share/xsessions/kodi.desktop

unzip ${RESOURCEDIR}/files/resource.language.zh_cn.zip -d ${SYSROOT_DIR}/usr/share/kodi/addons/
