source env/toolchain/config
source env/distro.info
source env/function.sh
export STEP_BUILDNAME=toolchain
export STEP_PACKAGENAME=llvm-project
export PACKAGE_VERSION=main_git-default
export RESOURCEDIR=${NEW_TARGET_SYSDIR}/files/toolchain/llvm-project/main_git-default/
rm -rf ${BUILD_DIRECTORY}/llvm-project_git-main_git-default_git
tar xvf ${DOWNLOADDIR}/llvm-project_git-main_git-default_git.tar.gz -C ${BUILD_DIRECTORY} 
pushd ${BUILD_DIRECTORY}/llvm-project_git-main_git-default_git
    


    if [ -d ${TOOLCHAIN_DIRECTORY}/cross-target/llvm-project ]; then
	mv ${TOOLCHAIN_DIRECTORY}/cross-target/llvm-project{,.$(date +%Y%m%d%H%M%S)}
    fi

pushd llvm
    mkdir -p host-build
    pushd host-build
        export PKG_CONFIG_SYSROOT_DIR=""
	export PKG_CONFIG_PATH=""
	cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX:PATH=${TOOLCHAIN_DIRECTORY}/cross-target/llvm-project \
                 -DCMAKE_CXX_COMPILER="g++" -DCMAKE_C_COMPILER="gcc" \
		 -DLLVM_APPEND_VC_REV:BOOL=OFF \
                 -DBUILD_SHARED_LIBS:BOOL=OFF   -DCMAKE_BUILD_TYPE=Release  \
                 -DCMAKE_C_FLAGS="-DNDEBUG" -DCMAKE_CXX_FLAGS="-DNDEBUG" \
		 -DLLVM_ENABLE_TERMINFO:BOOL=OFF \
                 -DLLVM_ENABLE_RTTI:BOOL=ON -DLLVM_BUILD_LLVM_DYLIB:BOOL=ON  \
                 -DLLVM_LINK_LLVM_DYLIB:BOOL=ON  \
                 -DLLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=ON   \
		 -DLLVM_ENABLE_PROJECTS='llvm;clang;clang-tools-extra;lld' \
		 -DLLVM_BUILD_RUNTIME:BOOL=ON \
		 -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=ON \
		 -DLLVM_ENABLE_RUNTIMES="compiler-rt;libc;openmp;libunwind;libcxxabi;libcxx;pstl" \
		 -DLLVM_VERSION_SUFFIX='' \
                 -DLLVM_INSTALL_TOOLCHAIN_ONLY:BOOL=OFF
        ninja
        ninja install/strip
	cp -a bin/clang-tidy-confusable-chars-gen ${TOOLCHAIN_DIRECTORY}/cross-target/llvm-project/bin/
popd
