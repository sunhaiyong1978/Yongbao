source env/toolchain/config
source env/distro.info
source env/function.sh
export STEP_BUILDNAME=toolchain
export STEP_PACKAGENAME=gcc-libc
export PACKAGE_VERSION=15.1.0
export RESOURCEDIR=${NEW_TARGET_SYSDIR}/files/toolchain/gcc-libc/15.1.0/
rm -rf ${BUILD_DIRECTORY}/gcc-15.1.0
tar xvf ${DOWNLOADDIR}/gcc-15.1.0.tar.xz -C ${BUILD_DIRECTORY} 
pushd ${BUILD_DIRECTORY}/gcc-15.1.0
    if [ "x$(get_user_set_env target)" == "x" ]; then
        CROSS_TARGET=$(archname_to_triple "$(get_user_set_env host ${CROSS_HOST})" "${CROSS_HOST}")
        ARCH_ABI=$(archname_to_archabi "$(get_user_set_env host ${CROSS_TARGET})" "${ARCH_ABI}")
    else
        CROSS_TARGET=$(archname_to_triple "$(get_user_set_env target ${CROSS_HOST})" "${CROSS_HOST}")
        ARCH_ABI=$(archname_to_archabi "$(get_user_set_env target ${CROSS_TARGET})" "${ARCH_ABI}")
    fi
    TARGET_VENDOR=$(get_user_set_env vendor "unknown")


    if [ "x$(get_user_set_env compat)" == "x1" ] || [ "x$(get_user_set_env target_compat)" == "x1" ]; then
	COMPAT_TARGET="$(echo "${CROSS_TARGET}" | sed "s@unknown@compat@g")"
    else
	case "x${TARGET_VENDOR}" in
		"xunknown")
			COMPAT_TARGET="${CROSS_TARGET}"
			;;
		"xNULL")
			COMPAT_TARGET="$(echo "${CROSS_TARGET}" | sed "s@-unknown-@-@g")"
			;;
		*)
			COMPAT_TARGET="$(echo "${CROSS_TARGET}" | sed "s@unknown@${TARGET_VENDOR}@g")"
			;;
	esac
    fi

    if [ "x${ARCH_ABI}" == "x32" ]; then
	WITH_ABI=""
    else
	WITH_ABI="--with-abi=${ARCH_ABI}"
    fi

    patch -Np1 -i ${SYSDIR}/files/toolchain/gcc-libc/15.1.0/patches/do-not-use-the-cached-value-of-the-gcc_except_table_section-for-comdat-functions.patch 
	 
    sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in
    tar xvf $(ls ${DOWNLOADDIR}/gmp-*.tar.* | sort -V | tail -n1)
    tar xvf $(ls ${DOWNLOADDIR}/mpfr-*.tar.* | sort -V | tail -n1)
    tar xvf $(ls ${DOWNLOADDIR}/mpc-*.tar.* | sort -V | tail -n1)
    mv gmp-* gmp
    mv mpfr-* mpfr
    mv mpc-* mpc
    mkdir cross-build
    pushd cross-build
        AR=ar LDFLAGS="-static" \
        ../configure --prefix=${TOOLCHAIN_DIRECTORY}/cross-target/${COMPAT_TARGET}/cross-tools --build=${CROSS_HOST} --host=${CROSS_HOST} \
                     --target=${COMPAT_TARGET} \
                     --enable-__cxa_atexit --enable-threads=posix \
                     --enable-libstdcxx-time \
                     --enable-checking=release \
                     --with-build-sysroot=${TOOLCHAIN_DIRECTORY}/cross-target/${COMPAT_TARGET}/cross-tools/target \
                     --with-sysroot=${TOOLCHAIN_DIRECTORY}/cross-target/${COMPAT_TARGET}/cross-tools/target \
                     --enable-default-pie \
		     --disable-multilib --enable-linker-build-id \
                     ${WITH_ABI} \
                     --enable-languages=c,c++,fortran,objc,obj-c++,lto
        make -j${JOBS} all-gcc
        make -j${JOBS}
        make install-strip
	ln -sf ${COMPAT_TARGET}-gcc ${TOOLCHAIN_DIRECTORY}/cross-target/${COMPAT_TARGET}/cross-tools/bin/${COMPAT_TARGET}-cc
        rm -fv $(dirname $(realpath $(${TOOLCHAIN_DIRECTORY}/cross-target/${COMPAT_TARGET}/cross-tools/bin/${COMPAT_TARGET}-gcc -print-file-name=libssp.so)))/libssp{,_nonshared}.*
    popd
popd 
rm -rf ${BUILD_DIRECTORY}/gcc-15.1.0
