source env/linux_runtime/config
source env/distro.info
source env/function.sh
source env/linux_runtime/custom
export STEP_BUILDNAME=linux_runtime
export STEP_PACKAGENAME=libclc
export PACKAGE_VERSION=19.1.7
export RESOURCEDIR=${NEW_TARGET_SYSDIR}/files/linux_runtime/libclc/19.1.7/
rm -rf ${BUILD_DIRECTORY}/llvm-project-19.1.7.src
tar xvf ${DOWNLOADDIR}/llvm-project-19.1.7.src.tar.xz -C ${BUILD_DIRECTORY} 
pushd ${BUILD_DIRECTORY}/llvm-project-19.1.7.src
    pushd libclc
	sed -i "s@COMMAND \${prepare_builtins_exe}@COMMAND qemu-${QEMU_ARCH} \${prepare_builtins_exe}@g" CMakeLists.txt
        mkdir cross-build
        pushd cross-build
            CC="clang" CXX="clang++" \
            cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \
                  -DLLVM_CONFIG=${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/llvm-config \
                  -DLLVM_LIBDIR_SUFFIX=${LIB_SUFF} \
                  -DLLVM_CLANG="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/clang" \
		  -DLLVM_TOOL_clang="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/clang" \
		  -DCMAKE_CXX_COMPILER_CLANG_SCAN_DEPS="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/clang-scan-deps" \
                  -DLLVM_AS="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/llvm-as" \
		  -DLLVM_TOOL_llvm-as="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/llvm-as" \
                  -DLLVM_LINK="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/llvm-link" \
		  -DLLVM_TOOL_llvm-link="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/llvm-link" \
                  -DLLVM_OPT="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/opt" \
		  -DLLVM_TOOL_opt="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/opt" \
                  -DLLVM_SPIRV="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/llvm-spirv" \
                  -DCMAKE_AR="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/llvm-ar" \
                  -DCMAKE_RANLIB="${SYSDIR}/cross-toolchains/${LINUX_HOST}/bin/llvm-ranlib" \
		  -DLLVM_DIR:PATH=${LINUX_SYSROOT_DIR}/usr/lib${LIB_SUFF}/cmake/llvm \
                  -DCMAKE_C_FLAGS="-DNDEBUG ${CFLAGS} -target ${LINUX_HOST}" -DCMAKE_CXX_FLAGS="-DNDEBUG ${CXXFLAGS} -target ${LINUX_HOST}" \
                  -DLLVM_ENABLE_RTTI:BOOL=ON \
                  -DLLVM_ENABLE_ZLIB:BOOL=ON \
                  -DCMAKE_MAKE_PROGRAM:PATH=${HOST_TOOLS_DIR}/bin/ninja \
                  -DLLVM_ENABLE_TERMINFO:BOOL=OFF \
                  -DLLVM_USE_SANITIZER:BOOL=ON \
                  -DCMAKE_SYSROOT=${LINUX_SYSROOT_DIR} \
                  -DCMAKE_FIND_ROOT_PATH=${LINUX_SYSROOT_DIR}/usr \
                  -DLLVM_LINK_LLVM_DYLIB:BOOL=ON \
		  -DCMAKE_INSTALL_LIBDIR=/usr/lib${LIB_SUFF} -DLIB_SUFFIX=${LIB_SUFF} -DCMAKE_INSTALL_LIBEXECDIR=/usr/libexec -DCMAKE_INSTALL_DATADIR=lib${LIB_SUFF} \
                  -DLLVM_HOST_TRIPLE=${LINUX_HOST}
             eval ${NINJA_AND_INSTALL}
        popd
    popd
popd 
rm -rf ${BUILD_DIRECTORY}/llvm-project-19.1.7.src
