source env/cross-toolchains/config
source env/distro.info
source env/function.sh
source env/cross-toolchains/custom
export STEP_BUILDNAME=cross-toolchains
export STEP_PACKAGENAME=llvm-project
export PACKAGE_VERSION=18.1.6
export RESOURCEDIR=${NEW_TARGET_SYSDIR}/files/cross-toolchains/llvm-project/18.1.6/
rm -rf ${BUILD_DIRECTORY}/llvm-project-18.1.6.src
tar xvf ${DOWNLOADDIR}/llvm-project-18.1.6.src.tar.xz -C ${BUILD_DIRECTORY} 
pushd ${BUILD_DIRECTORY}/llvm-project-18.1.6.src

pushd llvm
    mkdir -p native-build
    pushd native-build
	LDFLAGS="-Wl,-rpath-link=${CROSSTOOLS_DIR}/lib:${CROSSTOOLS_DIR}/lib64:${CROSSTOOLS_DIR}/build-tools/lib64 -Wl,-rpath=${CROSSTOOLS_DIR}/lib:${CROSSTOOLS_DIR}/lib64:${CROSSTOOLS_DIR}/build-tools/lib64" \
	PKG_CONFIG_SYSROOT_DIR="" \
        cmake .. -G Ninja -DCMAKE_INSTALL_PREFIX:PATH=${PREFIX}/llvm-project \
                 -DCMAKE_CXX_COMPILER="g++" -DCMAKE_C_COMPILER="gcc" \
                 -DBUILD_SHARED_LIBS:BOOL=OFF   -DCMAKE_BUILD_TYPE=Release  \
                 -DLLVM_LIBDIR_SUFFIX=64 \
                 -DCMAKE_C_FLAGS="-DNDEBUG" -DCMAKE_CXX_FLAGS="-DNDEBUG" \
                 -DLLVM_ENABLE_LIBCXX:BOOL=OFF \
		 -DLLVM_ENABLE_TERMINFO:BOOL=OFF \
                 -DLLVM_ENABLE_RTTI:BOOL=ON -DLLVM_BUILD_LLVM_DYLIB:BOOL=ON  \
                 -DLLVM_LINK_LLVM_DYLIB:BOOL=ON  \
                 -DCMAKE_INSTALL_RPATH="${PREFIX}/llvm-project/lib64;${CROSSTOOLS_DIR}/build-tools/lib64;\\\${ORIGIN}/../lib64" \
		 -DLLVM_VERSION_SUFFIX='' \
		 -DLLVM_ENABLE_PROJECTS='clang;lld' \
                 -DLLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=ON   \
                 -DLLVM_INSTALL_TOOLCHAIN_ONLY:BOOL=OFF
        ninja
        ninja install
popd

LLVM_DIST_VERSION="$(${PREFIX}/llvm-project/bin/llvm-config --version)"
save_package_version cross_toolchains_llvm-project "${LLVM_DIST_VERSION}"

popd 
rm -rf ${BUILD_DIRECTORY}/llvm-project-18.1.6.src
