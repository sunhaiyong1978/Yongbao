source env/wine_runtime/config
source env/distro.info
source env/function.sh
source env/wine_runtime/custom
export STEP_BUILDNAME=wine_runtime
export STEP_PACKAGENAME=wine-dev
export PACKAGE_VERSION=8.21
export RESOURCEDIR=${NEW_TARGET_SYSDIR}/files/wine_runtime/wine-dev/8.21/
rm -rf ${BUILD_DIRECTORY}/wine-8.21
tar xvf ${DOWNLOADDIR}/wine-8.21.tar.xz -C ${BUILD_DIRECTORY} 
pushd ${BUILD_DIRECTORY}/wine-8.21
        
        if [ ! -f configure ]; then
                autoreconf -ifv
        fi
	PATH=${SYSDIR}/cross-toolchains/i686-w64-mingw32/bin:${PATH}

        tar xvf ${RESOURCEDIR}/files/wine-dev-wine-staging_git.tar.gz

        wine-dev-wine-staging_git/staging/patchinstall.py DESTDIR=${PWD} --all


	export CROSSCFLAGS="-g -O3"
        ./configure --prefix=/opt/wine-dev --build=${CROSS_HOST} --host=${X86_HOST} --with-wine-tools=${CROSSTOOLS_DIR}/wine_dev-tools PULSE_LIBS="-Wl,-rpath-link=${X86_SYSROOT_DIR}/usr/lib${LIB_SUFF}/pulseaudio -lpulse -lpthread" NETAPI_LIBS="-Wl,-rpath-link=${X86_SYSROOT_DIR}/usr/lib${LIB_SUFF}/samba -lnetapi" OSSLIBDIR=${X86_SYSROOT_DIR}/usr/lib/oss --enable-malloc0returnsnull
        CC="${X86_HOST}-gcc" CXX="${X86_HOST}-g++" make -j${JOBS}
        make DESTDIR=${SYSROOT_DIR} install
        rm -f ${SYSROOT_DIR}/usr/lib${LIB_SUFF}/*.la

	mkdir -p ${SYSROOT_DIR}/opt/wine-dev/share/wine/{mono,gecko}
	cp -a ${RESOURCEDIR}/files/wine-mono-$(grep "MONO_VER:" tools/gitlab/test.yml | awk -F':' '{ print $2 }' | sed "s@ @@g")-x86.msi ${SYSROOT_DIR}/opt/wine-dev/share/wine/mono/
	cp -a ${RESOURCEDIR}/files/wine-gecko-$(grep "GECKO_VER:" tools/gitlab/test.yml | awk -F':' '{ print $2 }' | sed "s@ @@g")-x86.msi ${SYSROOT_DIR}/opt/wine-dev/share/wine/gecko/

popd 
rm -rf ${BUILD_DIRECTORY}/wine-8.21
